import { Client as SoapClient, createClientAsync as soapCreateClientAsync, IExOptions as ISoapExOptions } from "soap";
import { ListOfContinentsByName } from "./definitions/ListOfContinentsByName";
import { ListOfContinentsByNameResponse } from "./definitions/ListOfContinentsByNameResponse";
import { ListOfContinentsByCode } from "./definitions/ListOfContinentsByCode";
import { ListOfContinentsByCodeResponse } from "./definitions/ListOfContinentsByCodeResponse";
import { ListOfCurrenciesByName } from "./definitions/ListOfCurrenciesByName";
import { ListOfCurrenciesByNameResponse } from "./definitions/ListOfCurrenciesByNameResponse";
import { ListOfCurrenciesByCode } from "./definitions/ListOfCurrenciesByCode";
import { ListOfCurrenciesByCodeResponse } from "./definitions/ListOfCurrenciesByCodeResponse";
import { CurrencyName } from "./definitions/CurrencyName";
import { CurrencyNameResponse } from "./definitions/CurrencyNameResponse";
import { ListOfCountryNamesByCode } from "./definitions/ListOfCountryNamesByCode";
import { ListOfCountryNamesByCodeResponse } from "./definitions/ListOfCountryNamesByCodeResponse";
import { ListOfCountryNamesByName } from "./definitions/ListOfCountryNamesByName";
import { ListOfCountryNamesByNameResponse } from "./definitions/ListOfCountryNamesByNameResponse";
import { ListOfCountryNamesGroupedByContinent } from "./definitions/ListOfCountryNamesGroupedByContinent";
import { ListOfCountryNamesGroupedByContinentResponse } from "./definitions/ListOfCountryNamesGroupedByContinentResponse";
import { CountryName } from "./definitions/CountryName";
import { CountryNameResponse } from "./definitions/CountryNameResponse";
import { CountryIsoCode } from "./definitions/CountryIsoCode";
import { CountryIsoCodeResponse } from "./definitions/CountryIsoCodeResponse";
import { CapitalCity } from "./definitions/CapitalCity";
import { CapitalCityResponse } from "./definitions/CapitalCityResponse";
import { CountryCurrency } from "./definitions/CountryCurrency";
import { CountryCurrencyResponse } from "./definitions/CountryCurrencyResponse";
import { CountryFlag } from "./definitions/CountryFlag";
import { CountryFlagResponse } from "./definitions/CountryFlagResponse";
import { CountryIntPhoneCode } from "./definitions/CountryIntPhoneCode";
import { CountryIntPhoneCodeResponse } from "./definitions/CountryIntPhoneCodeResponse";
import { FullCountryInfo } from "./definitions/FullCountryInfo";
import { FullCountryInfoResponse } from "./definitions/FullCountryInfoResponse";
import { FullCountryInfoAllCountries } from "./definitions/FullCountryInfoAllCountries";
import { FullCountryInfoAllCountriesResponse } from "./definitions/FullCountryInfoAllCountriesResponse";
import { CountriesUsingCurrency } from "./definitions/CountriesUsingCurrency";
import { CountriesUsingCurrencyResponse } from "./definitions/CountriesUsingCurrencyResponse";
import { ListOfLanguagesByName } from "./definitions/ListOfLanguagesByName";
import { ListOfLanguagesByNameResponse } from "./definitions/ListOfLanguagesByNameResponse";
import { ListOfLanguagesByCode } from "./definitions/ListOfLanguagesByCode";
import { ListOfLanguagesByCodeResponse } from "./definitions/ListOfLanguagesByCodeResponse";
import { LanguageName } from "./definitions/LanguageName";
import { LanguageNameResponse } from "./definitions/LanguageNameResponse";
import { LanguageIsoCode } from "./definitions/LanguageIsoCode";
import { LanguageIsoCodeResponse } from "./definitions/LanguageIsoCodeResponse";
import { CountryIsoCode1 } from "./definitions/CountryIsoCode1";
import { CountryIsoCodeResponse1 } from "./definitions/CountryIsoCodeResponse1";
import { LanguageIsoCode1 } from "./definitions/LanguageIsoCode1";
import { LanguageIsoCodeResponse1 } from "./definitions/LanguageIsoCodeResponse1";
import { CountryInfoService } from "./services/CountryInfoService";

export interface ListOfCountryNamesByNameClient extends SoapClient {
    CountryInfoService: CountryInfoService;
    ListOfContinentsByNameAsync(listOfContinentsByName: ListOfContinentsByName, options?: ISoapExOptions): Promise<[result: ListOfContinentsByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfContinentsByCodeAsync(listOfContinentsByCode: ListOfContinentsByCode, options?: ISoapExOptions): Promise<[result: ListOfContinentsByCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfCurrenciesByNameAsync(listOfCurrenciesByName: ListOfCurrenciesByName, options?: ISoapExOptions): Promise<[result: ListOfCurrenciesByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfCurrenciesByCodeAsync(listOfCurrenciesByCode: ListOfCurrenciesByCode, options?: ISoapExOptions): Promise<[result: ListOfCurrenciesByCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CurrencyNameAsync(currencyName: CurrencyName, options?: ISoapExOptions): Promise<[result: CurrencyNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfCountryNamesByCodeAsync(listOfCountryNamesByCode: ListOfCountryNamesByCode, options?: ISoapExOptions): Promise<[result: ListOfCountryNamesByCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfCountryNamesByNameAsync(listOfCountryNamesByName: ListOfCountryNamesByName, options?: ISoapExOptions): Promise<[result: ListOfCountryNamesByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfCountryNamesGroupedByContinentAsync(listOfCountryNamesGroupedByContinent: ListOfCountryNamesGroupedByContinent, options?: ISoapExOptions): Promise<[result: ListOfCountryNamesGroupedByContinentResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CountryNameAsync(countryName: CountryName, options?: ISoapExOptions): Promise<[result: CountryNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CountryISOCodeAsync(countryIsoCode: CountryIsoCode, options?: ISoapExOptions): Promise<[result: CountryIsoCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CapitalCityAsync(capitalCity: CapitalCity, options?: ISoapExOptions): Promise<[result: CapitalCityResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CountryCurrencyAsync(countryCurrency: CountryCurrency, options?: ISoapExOptions): Promise<[result: CountryCurrencyResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CountryFlagAsync(countryFlag: CountryFlag, options?: ISoapExOptions): Promise<[result: CountryFlagResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CountryIntPhoneCodeAsync(countryIntPhoneCode: CountryIntPhoneCode, options?: ISoapExOptions): Promise<[result: CountryIntPhoneCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    FullCountryInfoAsync(fullCountryInfo: FullCountryInfo, options?: ISoapExOptions): Promise<[result: FullCountryInfoResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    FullCountryInfoAllCountriesAsync(fullCountryInfoAllCountries: FullCountryInfoAllCountries, options?: ISoapExOptions): Promise<[result: FullCountryInfoAllCountriesResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CountriesUsingCurrencyAsync(countriesUsingCurrency: CountriesUsingCurrency, options?: ISoapExOptions): Promise<[result: CountriesUsingCurrencyResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfLanguagesByNameAsync(listOfLanguagesByName: ListOfLanguagesByName, options?: ISoapExOptions): Promise<[result: ListOfLanguagesByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfLanguagesByCodeAsync(listOfLanguagesByCode: ListOfLanguagesByCode, options?: ISoapExOptions): Promise<[result: ListOfLanguagesByCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    LanguageNameAsync(languageName: LanguageName, options?: ISoapExOptions): Promise<[result: LanguageNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    LanguageISOCodeAsync(languageIsoCode: LanguageIsoCode, options?: ISoapExOptions): Promise<[result: LanguageIsoCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfContinentsByNameAsync(listOfContinentsByName: ListOfContinentsByName, options?: ISoapExOptions): Promise<[result: ListOfContinentsByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfContinentsByCodeAsync(listOfContinentsByCode: ListOfContinentsByCode, options?: ISoapExOptions): Promise<[result: ListOfContinentsByCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfCurrenciesByNameAsync(listOfCurrenciesByName: ListOfCurrenciesByName, options?: ISoapExOptions): Promise<[result: ListOfCurrenciesByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfCurrenciesByCodeAsync(listOfCurrenciesByCode: ListOfCurrenciesByCode, options?: ISoapExOptions): Promise<[result: ListOfCurrenciesByCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CurrencyNameAsync(currencyName: CurrencyName, options?: ISoapExOptions): Promise<[result: CurrencyNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfCountryNamesByCodeAsync(listOfCountryNamesByCode: ListOfCountryNamesByCode, options?: ISoapExOptions): Promise<[result: ListOfCountryNamesByCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfCountryNamesByNameAsync(listOfCountryNamesByName: ListOfCountryNamesByName, options?: ISoapExOptions): Promise<[result: ListOfCountryNamesByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfCountryNamesGroupedByContinentAsync(listOfCountryNamesGroupedByContinent: ListOfCountryNamesGroupedByContinent, options?: ISoapExOptions): Promise<[result: ListOfCountryNamesGroupedByContinentResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CountryNameAsync(countryName: CountryName, options?: ISoapExOptions): Promise<[result: CountryNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CountryISOCodeAsync(countryIsoCode: CountryIsoCode1, options?: ISoapExOptions): Promise<[result: CountryIsoCodeResponse1, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CapitalCityAsync(capitalCity: CapitalCity, options?: ISoapExOptions): Promise<[result: CapitalCityResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CountryCurrencyAsync(countryCurrency: CountryCurrency, options?: ISoapExOptions): Promise<[result: CountryCurrencyResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CountryFlagAsync(countryFlag: CountryFlag, options?: ISoapExOptions): Promise<[result: CountryFlagResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CountryIntPhoneCodeAsync(countryIntPhoneCode: CountryIntPhoneCode, options?: ISoapExOptions): Promise<[result: CountryIntPhoneCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    FullCountryInfoAsync(fullCountryInfo: FullCountryInfo, options?: ISoapExOptions): Promise<[result: FullCountryInfoResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    FullCountryInfoAllCountriesAsync(fullCountryInfoAllCountries: FullCountryInfoAllCountries, options?: ISoapExOptions): Promise<[result: FullCountryInfoAllCountriesResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    CountriesUsingCurrencyAsync(countriesUsingCurrency: CountriesUsingCurrency, options?: ISoapExOptions): Promise<[result: CountriesUsingCurrencyResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfLanguagesByNameAsync(listOfLanguagesByName: ListOfLanguagesByName, options?: ISoapExOptions): Promise<[result: ListOfLanguagesByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    ListOfLanguagesByCodeAsync(listOfLanguagesByCode: ListOfLanguagesByCode, options?: ISoapExOptions): Promise<[result: ListOfLanguagesByCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    LanguageNameAsync(languageName: LanguageName, options?: ISoapExOptions): Promise<[result: LanguageNameResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    LanguageISOCodeAsync(languageIsoCode: LanguageIsoCode1, options?: ISoapExOptions): Promise<[result: LanguageIsoCodeResponse1, rawResponse: any, soapHeader: any, rawRequest: any]>;
}

/** Create ListOfCountryNamesByNameClient */
export function createClientAsync(...args: Parameters<typeof soapCreateClientAsync>): Promise<ListOfCountryNamesByNameClient> {
    return soapCreateClientAsync(args[0], args[1], args[2]) as any;
}
